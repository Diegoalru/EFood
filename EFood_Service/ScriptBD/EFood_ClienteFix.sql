/*
 * EN ESTE NUEVO SCRIPT NO EXISTE LA FORMA DE INSERTAR TARJETAS NI CHEQUES DESDE LA APP,
 * SOLO SE UTILIZAN LOS YA REGISTRADOS.
 */

DROP TABLE IF EXISTS ERROR;
DROP TABLE IF EXISTS FACTURA;
DROP TABLE IF EXISTS TARJETA;
DROP TABLE IF EXISTS CHEQUE;
DROP TABLE IF EXISTS CLIENTE;
DROP TABLE IF EXISTS TRANSACCION;

CREATE TABLE ERROR
(
    CODE INTEGER IDENTITY (1, 1)
    ,FECHA DATETIME DEFAULT GETDATE()
    ,ERROR INTEGER
    ,MENSAJE NVARCHAR(200)
    ,CONSTRAINT PK_ERROR_CODE PRIMARY KEY (CODE)
    ,CONSTRAINT NN_ERROR_ERROR CHECK (ERROR IS NOT NULL )
    ,CONSTRAINT NN_ERROR_MENSAJE CHECK (MENSAJE IS NOT NULL )
);

CREATE TABLE TRANSACCION
(
    CODE INTEGER IDENTITY(1, 1)
    ,ID_TRANSACCION VARCHAR(18)
    ,ESTADO INTEGER
    ,FECHA DATETIME DEFAULT GETDATE()
    ,CONSTRAINT PK_TRANSACCION_CODE PRIMARY KEY (CODE)
    ,CONSTRAINT NN_TRANSACCION_ID CHECK (ID_TRANSACCION IS NOT NULL )
    ,CONSTRAINT UQ_TRANSACCION_ID UNIQUE (ID_TRANSACCION)
    ,CONSTRAINT NN_TRANSACCION_ESTADO CHECK (ESTADO IS NOT NULL )
);

CREATE TABLE CLIENTE
(
    CODE INTEGER IDENTITY(1, 1)
    ,NOMBRE NVARCHAR(32)
    ,APELLIDOS NVARCHAR(64)
    ,DIRECCION NVARCHAR(255)
    ,TELEFONO VARCHAR(8)
    ,DESCUENTO INTEGER
    ,TRANSACCION VARCHAR(18)
    ,CONSTRAINT PK_CLIENTE_CODE PRIMARY KEY (CODE)
    ,CONSTRAINT NN_CLIENTE_NOMBRE CHECK (NOMBRE IS NOT NULL )
    ,CONSTRAINT NN_CLIENTE_APELLIDOS CHECK (APELLIDOS IS NOT NULL)
    ,CONSTRAINT NN_CLIENTE_DIRECCION CHECK (DIRECCION IS NOT NULL )
    ,CONSTRAINT NN_CLIENTE_TELEFONO CHECK (TELEFONO IS NOT NULL )
    ,CONSTRAINT CH_CLIENTE_TELEFONO CHECK (LEN(TELEFONO) = 8)
    ,CONSTRAINT CK_CLIENTE_DESCUENTO CHECK (DESCUENTO > 0)
    ,CONSTRAINT NN_CLIENTE_TRANSACCION CHECK (TRANSACCION IS NOT NULL )
    ,CONSTRAINT FK_CLIENTE_TRANSACCION FOREIGN KEY (TRANSACCION) REFERENCES TRANSACCION(ID_TRANSACCION)
    ,CONSTRAINT UQ_CLIENTE_TRANSACCION UNIQUE (TRANSACCION)
);

CREATE TABLE CHEQUE
(
    CODE INTEGER IDENTITY(1, 1)
    ,NUMERO VARCHAR(8)
    ,CUENTA VARCHAR(10)
    ,SALDO DECIMAL(8, 2)
    ,CONSTRAINT PK_CHEQUE_CODE PRIMARY KEY (CODE)
    ,CONSTRAINT NN_CHEQUE_NUMERO CHECK (NUMERO IS NOT NULL )
    ,CONSTRAINT NN_CHEQUE_CUENTA CHECK (CUENTA IS NOT NULL )
    ,CONSTRAINT UQ_CHEQUE_CHEQUEUSADO UNIQUE (NUMERO, CUENTA)
    ,CONSTRAINT NN_CHEQUE_SALDO CHECK (SALDO IS NOT NULL)
    ,CONSTRAINT CK_CHEQUE_SALDOINCORRECTO CHECK (SALDO > 0)
);

CREATE TABLE TARJETA
(
    CODE INTEGER IDENTITY (1, 1)
    ,TARJETA VARCHAR(16)
    ,MES NVARCHAR(2)
    ,YEAR NVARCHAR(4)
    ,CVV NVARCHAR(3)
    ,TIPO INTEGER
    ,SALDO DECIMAL(8, 2)
    ,CONSTRAINT PK_TARJETA_CODE PRIMARY KEY (CODE)
    ,CONSTRAINT NN_TARJETA_TARJETA CHECK (TARJETA IS NOT NULL )
    ,CONSTRAINT CK_TARJETA_TARJETA CHECK (LEN(TARJETA) = 16)
    ,CONSTRAINT NN_TARJETA_MES CHECK (MES IS NOT NULL)
    ,CONSTRAINT CK_TARJETA_MES CHECK (LEN(MES) = 2)
    ,CONSTRAINT NN_TARJETA_YEAR CHECK (YEAR IS NOT NULL )
    ,CONSTRAINT CK_TARJETA_YEAR CHECK (LEN(YEAR) = 4)
    ,CONSTRAINT NN_TARJETA_CVV CHECK (CVV IS NOT NULL )
    ,CONSTRAINT NN_TARJETA_TIPO CHECK (TIPO IS NOT NULL )
    ,CONSTRAINT NN_TARJETA_SALDO CHECK (SALDO IS NOT NULL)
    ,CONSTRAINT CK_TARJETA_SALDOINCORRECTO CHECK (SALDO > 0)
);

CREATE TABLE FACTURA
(
    CODE INT IDENTITY(1,1)
    ,TARJETA INT
    ,CHEQUE INT
    ,EFECTIVO BIT DEFAULT 0
    ,TRANSACCION VARCHAR(18)
    ,CONSTRAINT PK_FACTURA_CODE PRIMARY KEY ( CODE )
    ,CONSTRAINT FK_FACTURA_TARJETA FOREIGN KEY ( TARJETA ) REFERENCES TARJETA ( CODE )
    ,CONSTRAINT FK_FACTURA_CHEQUE FOREIGN KEY ( CHEQUE ) REFERENCES CHEQUE ( CODE )
    ,CONSTRAINT NN_FACTURA_TRANSACCION CHECK ( TRANSACCION IS NOT NULL )
    ,CONSTRAINT FK_FACTURA_TRANSACCION FOREIGN KEY ( TRANSACCION ) REFERENCES TRANSACCION( ID_TRANSACCION )
);

USE [efoodcliente]
GO

CREATE OR ALTER PROCEDURE dbo.CREAR_TRANSACCION
(
    @ID_TRANSACCION VARCHAR(18)
)
AS
    BEGIN
        INSERT INTO TRANSACCION (ID_TRANSACCION, ESTADO) VALUES (@ID_TRANSACCION, 0);
    END
GO

CREATE OR ALTER PROCEDURE dbo.ACTUALIZA_TRANSACCION
(
    @ID_TRANSACCION VARCHAR(18)
    ,@ESTADO INTEGER
)
AS
    BEGIN
        UPDATE TRANSACCION SET ESTADO = @ESTADO WHERE ID_TRANSACCION = @ID_TRANSACCION;
    END
GO

CREATE OR ALTER FUNCTION dbo.EXISTE_TRANSACCION
(
    @TRANSACCION VARCHAR(18)
)
RETURNS BIT
AS
    BEGIN
        DECLARE @RESULTADO BIT = 1;
        IF NOT EXISTS(SELECT * FROM TRANSACCION WHERE ID_TRANSACCION = @TRANSACCION)
        BEGIN
            SET @RESULTADO = 0;
        end
        RETURN @RESULTADO;
    end
GO

CREATE OR ALTER FUNCTION dbo.EXISTE_CHEQUE
(
    @NUMERO VARCHAR(8)
    ,@CUENTA VARCHAR(10)
)
RETURNS BIT
AS
    BEGIN
        DECLARE @RESULTADO BIT = 1;
        IF NOT EXISTS(SELECT * FROM CHEQUE WHERE CUENTA LIKE UPPER(@CUENTA) AND NUMERO LIKE UPPER(@NUMERO))
        BEGIN
            SET @RESULTADO = 0;
        end
        RETURN @RESULTADO;
    end
GO

CREATE OR ALTER FUNCTION dbo.VALIDA_SALDO_CHEQUE
(
    @NUMERO VARCHAR(8)
    ,@CUENTA VARCHAR(10)
    ,@MONTO DECIMAL(8,2)
)
RETURNS BIT
AS
    BEGIN
        DECLARE @RESULTADO BIT = 0;
        IF EXISTS(SELECT * FROM CHEQUE WHERE CUENTA LIKE UPPER(@CUENTA) AND NUMERO LIKE UPPER(@NUMERO) AND SALDO >= @MONTO )
        BEGIN
            SET @RESULTADO = 1;
        end
        RETURN @RESULTADO;
    end
GO

CREATE OR ALTER FUNCTION dbo.RETORNA_CODE_CHEQUE
(
    @NUMERO VARCHAR(8)
    ,@CUENTA VARCHAR(10)
)
RETURNS INT
AS
BEGIN
    DECLARE @RESULTADO INT;
    SELECT @RESULTADO = CODE FROM CHEQUE WHERE CUENTA = @CUENTA AND NUMERO = @NUMERO;
    RETURN @RESULTADO;
END
GO

CREATE OR ALTER FUNCTION dbo.EXISTE_TARJETA
(
    @TARJETA VARCHAR(16)
)
RETURNS BIT
AS
    BEGIN
        DECLARE @RESULTADO BIT = 1;
        IF NOT EXISTS(SELECT * FROM TARJETA WHERE TARJETA = @TARJETA)
        BEGIN
            SET @RESULTADO = 0;
        end
        RETURN @RESULTADO;
    end
GO

CREATE OR ALTER FUNCTION dbo.VALIDA_SALDO_TARJETA
(
    @TARJETA VARCHAR(16)
    ,@MONTO DECIMAL(8,2)
)
RETURNS BIT
AS
BEGIN
    DECLARE @RESULTADO BIT = 0;
        IF EXISTS(SELECT * FROM TARJETA WHERE TARJETA = @TARJETA AND SALDO >= @MONTO )
        BEGIN
            SET @RESULTADO = 1;
        end
        RETURN @RESULTADO;
END
GO

CREATE OR ALTER FUNCTION dbo.RETORNA_CODE_TARJETA
(
    @TARJETA VARCHAR(16)
)
RETURNS INT
AS
BEGIN
    DECLARE @RESULTADO INT;
    SELECT @RESULTADO = CODE FROM TARJETA WHERE TARJETA = @TARJETA;
    RETURN @RESULTADO;
END
GO

CREATE OR ALTER PROCEDURE dbo.INSERTA_CLIENTE
(
    @NOMBRE NVARCHAR(32)
    ,@APELLIDOS NVARCHAR(64)
    ,@DIRECCION NVARCHAR(255)
    ,@TELEFONO VARCHAR(8)
    ,@DESCUENTO INTEGER
    ,@TRANSACCION VARCHAR(18)
)
AS
    BEGIN
        INSERT
            INTO
                CLIENTE
                (NOMBRE, APELLIDOS, DIRECCION, TELEFONO, DESCUENTO, TRANSACCION)
            VALUES
                (@NOMBRE, @APELLIDOS, @DIRECCION, @TELEFONO, @DESCUENTO, @TRANSACCION);
    END
GO

CREATE OR ALTER PROCEDURE CREA_FACTURA
(
    @TARJETA INT
    ,@CHEQUE INT
    ,@EFECTIVO BIT
    ,@TRANSACCION VARCHAR(18)
)
AS
BEGIN
   INSERT INTO FACTURA (TARJETA, CHEQUE, EFECTIVO, TRANSACCION)
   VALUES (@TARJETA, @CHEQUE, @EFECTIVO, @TRANSACCION);
END
GO

CREATE OR ALTER FUNCTION dbo.RETORNACLAVE()
RETURNS VARCHAR(MAX)
AS
BEGIN
    RETURN 'DESINO_WEB-ULACIT-2020';
END
GO

CREATE OR ALTER PROCEDURE AUMENTA_SALDO_TARJETA
(
    @TARJETA VARCHAR(16)
    ,@SALDO DECIMAL(8,2)
)
AS
BEGIN
    UPDATE
        TARJETA
            SET SALDO = @SALDO
        WHERE
            TARJETA = @TARJETA;
END
GO

CREATE OR ALTER PROCEDURE AUMENTA_SALDO_CHEQUE
(
    @NUMERO VARCHAR(8)
    ,@CUENTA VARCHAR(10)
    ,@SALDO DECIMAL(8,2)
)
AS
BEGIN
   UPDATE
        CHEQUE
            SET SALDO = @SALDO
        WHERE
            CUENTA = @CUENTA
            AND NUMERO = @NUMERO;
END
GO